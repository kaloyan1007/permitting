# Generated by Django 5.1.3 on 2025-02-06 07:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AreaRelatedRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="CollectiveProtection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ContractorOrg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("number", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="PermitStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("short_description", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=4)),
            ],
            options={
                "verbose_name": "PermitStatus",
                "verbose_name_plural": "PermitStatuses",
            },
        ),
        migrations.CreateModel(
            name="PersonalProtection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="SafetyMeasure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_set", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="custom_user_permissions",
                        to="auth.permission",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="employees",
                        to="permitting.contractororg",
                    ),
                ),
                (
                    "eligible_for_roles",
                    models.ManyToManyField(
                        blank=True, related_name="eligible", to="permitting.role"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "associated_risks",
                    models.ManyToManyField(
                        related_name="inherent_for_areas",
                        to="permitting.arearelatedrisk",
                    ),
                ),
                (
                    "required_personal_protection",
                    models.ManyToManyField(
                        related_name="required_in_areas",
                        to="permitting.personalprotection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("tag", models.CharField(max_length=255)),
                (
                    "area",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="equipments",
                        to="permitting.area",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Permit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("task_description", models.TextField()),
                ("tech_completion_time", models.DateTimeField(blank=True, null=True)),
                ("tests_and_golive_comment", models.TextField()),
                (
                    "collective_protection",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_in_permits",
                        to="permitting.collectiveprotection",
                    ),
                ),
                (
                    "risks",
                    models.ManyToManyField(
                        blank=True,
                        related_name="considered_in_permits",
                        to="permitting.arearelatedrisk",
                    ),
                ),
                (
                    "targeted_equipment",
                    models.ManyToManyField(
                        related_name="permits", to="permitting.equipment"
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="permits",
                        to="permitting.permitstatus",
                    ),
                ),
                (
                    "personal_protection",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_in_permits",
                        to="permitting.personalprotection",
                    ),
                ),
                (
                    "safety_measures",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_in_permits",
                        to="permitting.safetymeasure",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeneralConfirmation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allowed_loto_removal", models.BooleanField(blank=True, null=True)),
                ("eq_safe_to_operate", models.BooleanField(blank=True, null=True)),
                ("initialization_ok", models.BooleanField(blank=True, null=True)),
                ("loto_in_place", models.BooleanField(blank=True, null=True)),
                ("loto_must_stay", models.BooleanField(blank=True, null=True)),
                ("loto_removed", models.BooleanField(blank=True, null=True)),
                (
                    "performed_general_safety_briefing",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "performed_task_specific_briefing",
                    models.BooleanField(blank=True, null=True),
                ),
                ("task_completed", models.BooleanField(default=False)),
                ("work_place_cleaned", models.BooleanField(blank=True, null=True)),
                (
                    "permit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permitting.permit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DailyOpenClose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("closed_at", models.DateTimeField(auto_now_add=True)),
                ("confirmed_led_workers_out", models.BooleanField(default=False)),
                ("confirmed_loto_in_place", models.BooleanField(default=False)),
                ("declared_led_workers_in", models.BooleanField(default=False)),
                ("declared_loto_in_place", models.BooleanField(default=False)),
                ("opened_at", models.DateTimeField(auto_now_add=True)),
                (
                    "permit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permitting.permit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Contribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField()),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("permit_total_content", models.JSONField()),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="authored_contributions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "permit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contributions",
                        to="permitting.permit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "authorizer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="authorizer_for",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "foreman",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreman_for",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "issuer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="issuer_of",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "loto_officer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="loto_officer_for",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "safety_gatekeeper",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="safety_gatekeeper_for",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task_responsible",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="task_responsible_for",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "permit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permitting.permit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkerTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("date_left", models.DateTimeField(blank=True, null=True)),
                ("debriefed_general", models.BooleanField(default=False)),
                ("debriefed_specifics", models.BooleanField(default=False)),
                (
                    "permit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permitting.permit",
                    ),
                ),
                (
                    "worker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_workers_team",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
